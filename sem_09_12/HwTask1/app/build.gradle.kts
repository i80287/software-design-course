/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)

    // Apply the application plugin to add support for building a CLI application in Java.
    application
    // kotlin("jvm") version "1.9.21"
    kotlin("plugin.serialization") version "1.9.21"
    // id("com.ncorti.ktfmt.gradle") version "0.15.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

group = "org.example"
version = "1.0-SNAPSHOT"

dependencies {
//    // Use the Kotlin JUnit 5 integration.
//    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
//    // Use the JUnit 5 integration.
//    testImplementation(libs.junit.jupiter.engine)
//    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    // testImplementation("org.junit.jupiter:junit-jupiter:5.9.1")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:31.1-jre")

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2")
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.5.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(20))
    }
}
kotlin {
    jvmToolchain(20)
}

application {
    // Define the main class for the application.
    mainClass.set("hwtask1.AppKt")
}

(tasks.run) { standardInput = System.`in` }

//tasks.named<Test>("test") {
//    // Use JUnit Platform for unit tests.
//    useJUnitPlatform()
//}
